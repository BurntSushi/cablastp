Storage now revolves around two data structures: the uniques database has a set 
of reference sequences, each of which is accompanied by a set of links to 
compressed original sequences.

A compressed original sequence is an ordered list of links into the uniqes 
database. A link can be uncompressed by applying its edit script to the unique 
sub-sequence it points to. (The edit script may be empty, in which case the 
unique sub-sequence is the uncompressed part of that original sequence.)

LinkToCompressed
================
Defined by a triple: the original sequence id, and the start and stop residue 
indices of the reference sequence.

The start and stop indices can be used to find links that are in the range of 
residues returned by BLAST hits.

The original sequence id can be used as an index into the compressed original 
sequence database. (The compressed original database will store compressed 
sequences in the same order in which they are read.)

CompressedOriginalSequence
==========================
Defined by a tuple: name (uncompressed?), and an ordered list of 
LinkToReference.

LinkToReference
===============
Defined by a 4-tuple: an edit script, a reference sequence id, and the start 
and stop residue indices of the reference sequence.

The reference sequence id can be used to find the sequence of amino acids in 
the reference database. The start and stop residue indices refer to a 
subsequence of that reference sequence. The edit script, when applied to this 
subsequence, regenerates precisely the original uncompressed sequence.

